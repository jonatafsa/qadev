    .answer {
      display: flex;
      align-items: center;
      gap: .5rem;
      padding: 1rem 2rem;
      border-radius: 12px;
      color: #fff;
      font-size: .9rem;
      position: relative;
      z-index: 98;

      .code-ask {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        z-index: 99;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: .5rem;
        gap: .45rem;

        input {
          width: fit-content;
          background-color: #fff;
          cursor: pointer;
        }

        label {
          cursor: pointer;
        }
      }

      .correct-answer {
        position: absolute;
        top: 25px;
        left: 0;
        width: 100%;
        z-index: 99;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: .5rem;
        gap: .45rem;

        input {
          width: fit-content;
          background-color: #fff;
          cursor: pointer;
        }

        label {
          cursor: pointer;
        }
      }

      .code-icon {
        width: 1.5rem;
        height: 1.5rem;
        background-color: #fff;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        color: #000;
        padding: .1rem;
        z-index: 99;
        position: absolute;
        bottom: 15px;
        right: 15px;
        opacity: .4;
        transition: .3s ease-in-out;

        &:hover {
          opacity: 1;
        }
      }

      p {
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        text-align: center;
        font-size: .8rem;
        color: rgb(138, 138, 138);
        pointer-events: none;
      }
    }

    .code-box {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      border-radius: 32px;
      z-index: 98;
      display: flex;
      align-items: center;
      justify-content: center;
      transition: .5s ease-in-out;
      cursor: pointer;
      border: 1px solid rgba(107, 54, 48, 0.63);

      pre {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        border-radius: 32px;
        overflow: hidden;
        transition: .4s ease-in-out;
        z-index: 97;
        background-color: #282C34;
        padding: 2rem;
        padding-top: 3.2rem;
        overflow: auto;
      }

      .code {
        width: 100%;
        height: 100%;
        border-radius: 32px;
        position: relative;
      }
    }

    .code-box-top {
      transform: translateY(-100%);
    }

    .rotate {
      transform: rotate(180deg);
    }

    $toggle-indicator-size: 16px; // changing this number will resize the whole toggle
    $track-height: $toggle-indicator-size + 4;
    $track-width: $toggle-indicator-size * 2.5;
    /* 
    
    The following vars come from my theme. 
    You'll need to replace with your own color values. 
    
    - "$light"
    - "$mid"
    - "$dark"
    
    */
    $track-background: rgb(255, 255, 255);
    $focus-ring: 0px 0px 0px 2px #121212;
    $light: #fff;
    $mid: #ccc;
    $dark: var(--main-color-1);
    $speed: 0.5s;

    // Toggle specific styles
    .toggle {
      align-items: center;
      border-radius: 100px;
      display: flex;
      font-weight: 600;
      margin-bottom: 16px;
      font-size: .8rem;
      opacity: 0.7;

      &:hover {
        opacity: 1;
      }

      &:last-of-type {
        margin: 0;
      }
    }

    // Since we can't style the checkbox directly, we "hide" it so we can draw the toggle.
    .toggle__input {
      clip: rect(0 0 0 0);
      clip-path: inset(50%);
      height: 1px;
      overflow: hidden;
      position: absolute;
      white-space: nowrap;
      width: 1px;

      // This style sets the focus ring. The ":not([disabled])" prevents the focus ring from creating a flash when the element is clicked.
      &:not([disabled]):active+.toggle-track,
      &:not([disabled]):focus+.toggle-track {
        border: 1px solid transparent;
        box-shadow: $focus-ring;
      }

      &:disabled+.toggle-track {
        cursor: not-allowed;
        opacity: 0.4;
      }
    }

    .toggle-track {
      background: $track-background;
      border-radius: 100px;
      cursor: pointer;
      display: flex;
      height: $track-height;
      margin-right: 12px;
      position: relative;
      width: $track-width;
    }

    .toggle-indicator {
      align-items: center;
      background: $dark;
      border-radius: $toggle-indicator-size;
      bottom: 2px;
      display: flex;
      height: $toggle-indicator-size;
      justify-content: center;
      left: 2px;
      position: absolute;
      transition: $speed;
      width: $toggle-indicator-size;
    }

    // The check mark is optional
    .checkMark {
      fill: #fff;
      height: $toggle-indicator-size - 4;
      width: $toggle-indicator-size - 4;
      opacity: 0;
      transition: opacity $speed ease-in-out;
    }

    .toggle__input:checked+.toggle-track .toggle-indicator {
      background: $dark;
      transform: translateX($track-width - $track-height);
      background-color: rgb(49, 211, 0);

      .checkMark {
        opacity: 1;
        transition: opacity $speed ease-in-out;
      }
    }

    @media screen and (-ms-high-contrast: active) {
      .toggle-track {
        border-radius: 0;
      }
    }